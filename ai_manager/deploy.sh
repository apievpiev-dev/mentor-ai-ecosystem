#!/bin/bash

# AI Manager - –°–∫—Ä–∏–ø—Ç —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—è –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ
set -e

echo "üöÄ –†–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ AI Manager –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ..."

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
log() {
    echo -e "${BLUE}[$(date +'%Y-%m-%d %H:%M:%S')]${NC} $1"
}

success() {
    echo -e "${GREEN}‚úÖ $1${NC}"
}

warning() {
    echo -e "${YELLOW}‚ö†Ô∏è  $1${NC}"
}

error() {
    echo -e "${RED}‚ùå $1${NC}"
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
check_dependencies() {
    log "–ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π..."
    
    if ! command -v docker &> /dev/null; then
        error "Docker –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Docker –∏ –ø–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø–æ–ø—ã—Ç–∫—É."
        exit 1
    fi
    
    if ! command -v docker-compose &> /dev/null; then
        error "Docker Compose –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Docker Compose –∏ –ø–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø–æ–ø—ã—Ç–∫—É."
        exit 1
    fi
    
    success "–í—Å–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã"
}

# –°–æ–∑–¥–∞–Ω–∏–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π
create_directories() {
    log "–°–æ–∑–¥–∞–Ω–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π..."
    
    mkdir -p logs
    mkdir -p data
    mkdir -p ssl
    
    success "–î–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ —Å–æ–∑–¥–∞–Ω—ã"
}

# –°–æ–∑–¥–∞–Ω–∏–µ .env —Ñ–∞–π–ª–∞
create_env_file() {
    log "–°–æ–∑–¥–∞–Ω–∏–µ —Ñ–∞–π–ª–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏..."
    
    if [ ! -f .env ]; then
        cat > .env << EOF
# AI Manager Configuration
DATABASE_URL=postgresql://ai_manager:password@postgres:5432/ai_manager
REDIS_URL=redis://redis:6379/0
HOST=0.0.0.0
PORT=8000
DEBUG=false

# AI Providers
OLLAMA_URL=http://ollama:11434
HUGGINGFACE_TOKEN=

# System Limits
MAX_CONCURRENT_TASKS=20
MAX_AGENTS=100
AGENT_IDLE_TIMEOUT=1800

# Monitoring
ENABLE_PERFORMANCE_MONITORING=true
SYSTEM_METRICS_INTERVAL=60

# Security
SECRET_KEY=$(openssl rand -hex 32)
ALLOWED_ORIGINS=http://localhost,http://localhost:8000
EOF
        success "–§–∞–π–ª .env —Å–æ–∑–¥–∞–Ω"
    else
        warning "–§–∞–π–ª .env —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç"
    fi
}

# –°–±–æ—Ä–∫–∞ –∏ –∑–∞–ø—É—Å–∫ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤
deploy_containers() {
    log "–°–±–æ—Ä–∫–∞ –∏ –∑–∞–ø—É—Å–∫ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤..."
    
    # –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã
    docker-compose down 2>/dev/null || true
    
    # –°–æ–±–∏—Ä–∞–µ–º –∏ –∑–∞–ø—É—Å–∫–∞–µ–º
    docker-compose up -d --build
    
    success "–ö–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã –∑–∞–ø—É—â–µ–Ω—ã"
}

# –û–∂–∏–¥–∞–Ω–∏–µ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ —Å–µ—Ä–≤–∏—Å–æ–≤
wait_for_services() {
    log "–û–∂–∏–¥–∞–Ω–∏–µ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ —Å–µ—Ä–≤–∏—Å–æ–≤..."
    
    # –ñ–¥–µ–º PostgreSQL
    log "–û–∂–∏–¥–∞–Ω–∏–µ PostgreSQL..."
    while ! docker-compose exec -T postgres pg_isready -U ai_manager; do
        sleep 2
    done
    success "PostgreSQL –≥–æ—Ç–æ–≤"
    
    # –ñ–¥–µ–º Redis
    log "–û–∂–∏–¥–∞–Ω–∏–µ Redis..."
    while ! docker-compose exec -T redis redis-cli ping; do
        sleep 2
    done
    success "Redis –≥–æ—Ç–æ–≤"
    
    # –ñ–¥–µ–º Ollama
    log "–û–∂–∏–¥–∞–Ω–∏–µ Ollama..."
    while ! curl -s http://localhost:11434/api/tags; do
        sleep 5
    done
    success "Ollama –≥–æ—Ç–æ–≤"
    
    # –ñ–¥–µ–º AI Manager
    log "–û–∂–∏–¥–∞–Ω–∏–µ AI Manager..."
    while ! curl -s http://localhost:8000/api/stats; do
        sleep 5
    done
    success "AI Manager –≥–æ—Ç–æ–≤"
}

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
init_database() {
    log "–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö..."
    
    # –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –∫–æ–º–∞–Ω–¥—ã –¥–ª—è –º–∏–≥—Ä–∞—Ü–∏–π
    # docker-compose exec ai-manager python -c "from database.database import init_db; import asyncio; asyncio.run(init_db())"
    
    success "–ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞"
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞
check_status() {
    log "–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ —Å–µ—Ä–≤–∏—Å–æ–≤..."
    
    echo ""
    echo "üìä –°—Ç–∞—Ç—É—Å —Å–µ—Ä–≤–∏—Å–æ–≤:"
    docker-compose ps
    
    echo ""
    echo "üåê –î–æ—Å—Ç—É–ø–Ω—ã–µ endpoints:"
    echo "  - AI Manager: http://localhost:8000"
    echo "  - API Docs: http://localhost:8000/docs"
    echo "  - Ollama: http://localhost:11434"
    echo "  - PostgreSQL: localhost:5432"
    echo "  - Redis: localhost:6379"
    
    echo ""
    echo "üìù –ü–æ–ª–µ–∑–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:"
    echo "  - –õ–æ–≥–∏: docker-compose logs -f"
    echo "  - –û—Å—Ç–∞–Ω–æ–≤–∫–∞: docker-compose down"
    echo "  - –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫: docker-compose restart"
    echo "  - –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ: docker-compose pull && docker-compose up -d"
}

# –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
main() {
    echo "ü§ñ AI Manager - –†–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ"
    echo "========================================"
    
    check_dependencies
    create_directories
    create_env_file
    deploy_containers
    wait_for_services
    init_database
    check_status
    
    echo ""
    success "üéâ AI Manager —É—Å–ø–µ—à–Ω–æ —Ä–∞–∑–≤–µ—Ä–Ω—É—Ç!"
    echo ""
    echo "üöÄ –°–∏—Å—Ç–µ–º–∞ –≥–æ—Ç–æ–≤–∞ –∫ —Ä–∞–±–æ—Ç–µ:"
    echo "   - –í–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å: http://localhost:8000"
    echo "   - API –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è: http://localhost:8000/docs"
    echo "   - –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥: docker-compose logs -f"
    echo ""
    echo "üí° –î–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏: docker-compose down"
}

# –ó–∞–ø—É—Å–∫
main "$@"
