#!/bin/bash

# Autonomous JARVIS Monitoring Script
# –°–∫—Ä–∏–ø—Ç –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ –∞–≤—Ç–æ–Ω–æ–º–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã JARVIS

LOG_FILE="/var/log/jarvis-monitor.log"
HEALTH_URL="http://localhost:8080/api/status"
TELEGRAM_BOT_TOKEN="YOUR_BOT_TOKEN"
TELEGRAM_CHAT_ID="YOUR_CHAT_ID"

log_message() {
    echo "$(date '+%Y-%m-%d %H:%M:%S') - $1" >> $LOG_FILE
}

send_telegram_notification() {
    local message="$1"
    if [[ -n "$TELEGRAM_BOT_TOKEN" && -n "$TELEGRAM_CHAT_ID" ]]; then
        curl -s -X POST "https://api.telegram.org/bot$TELEGRAM_BOT_TOKEN/sendMessage" \
            -d "chat_id=$TELEGRAM_CHAT_ID" \
            -d "text=ü§ñ JARVIS Alert: $message"
    fi
}

check_health() {
    local response=$(curl -s -w "%{http_code}" -o /dev/null "$HEALTH_URL")
    
    if [[ "$response" == "200" ]]; then
        log_message "‚úÖ JARVIS —Å–∏—Å—Ç–µ–º–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç –Ω–æ—Ä–º–∞–ª—å–Ω–æ"
        return 0
    else
        log_message "‚ùå JARVIS —Å–∏—Å—Ç–µ–º–∞ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞ (HTTP: $response)"
        send_telegram_notification "–°–∏—Å—Ç–µ–º–∞ JARVIS –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞! HTTP –∫–æ–¥: $response"
        return 1
    fi
}

restart_service() {
    log_message "üîÑ –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ —Å–ª—É–∂–±—ã JARVIS..."
    systemctl restart jarvis
    sleep 30
    
    if check_health; then
        log_message "‚úÖ –°–ª—É–∂–±–∞ —É—Å–ø–µ—à–Ω–æ –ø–µ—Ä–µ–∑–∞–ø—É—â–µ–Ω–∞"
        send_telegram_notification "–°–ª—É–∂–±–∞ JARVIS —É—Å–ø–µ—à–Ω–æ –ø–µ—Ä–µ–∑–∞–ø—É—â–µ–Ω–∞"
    else
        log_message "‚ùå –û—à–∏–±–∫–∞ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞ —Å–ª—É–∂–±—ã"
        send_telegram_notification "–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: –Ω–µ —É–¥–∞–µ—Ç—Å—è –ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å JARVIS!"
    fi
}

check_resources() {
    local cpu_usage=$(top -bn1 | grep "Cpu(s)" | awk '{print $2}' | awk -F'%' '{print $1}')
    local memory_usage=$(free | grep Mem | awk '{printf "%.1f", ($3/$2) * 100.0}')
    local disk_usage=$(df -h / | awk 'NR==2{printf "%s", $5}' | sed 's/%//')
    
    log_message "üìä –†–µ—Å—É—Ä—Å—ã: CPU: ${cpu_usage}%, RAM: ${memory_usage}%, Disk: ${disk_usage}%"
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏–µ –∑–Ω–∞—á–µ–Ω–∏—è
    if (( $(echo "$cpu_usage > 90" | bc -l) )); then
        send_telegram_notification "‚ö†Ô∏è –í—ã—Å–æ–∫–∞—è –∑–∞–≥—Ä—É–∑–∫–∞ CPU: ${cpu_usage}%"
    fi
    
    if (( $(echo "$memory_usage > 85" | bc -l) )); then
        send_telegram_notification "‚ö†Ô∏è –í—ã—Å–æ–∫–æ–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –ø–∞–º—è—Ç–∏: ${memory_usage}%"
    fi
    
    if (( disk_usage > 90 )); then
        send_telegram_notification "‚ö†Ô∏è –ú–∞–ª–æ –º–µ—Å—Ç–∞ –Ω–∞ –¥–∏—Å–∫–µ: ${disk_usage}%"
    fi
}

main() {
    log_message "üöÄ –ó–∞–ø—É—Å–∫ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ JARVIS —Å–∏—Å—Ç–µ–º—ã"
    
    if ! check_health; then
        restart_service
    fi
    
    check_resources
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∞–≤—Ç–æ–Ω–æ–º–Ω–æ—Å—Ç—å —Å–∏—Å—Ç–µ–º—ã
    local autonomy_level=$(curl -s "$HEALTH_URL" | jq -r '.system_state.autonomy_level // 0')
    local visual_analyses=$(curl -s "$HEALTH_URL" | jq -r '.system_state.visual_analysis_count // 0')
    
    log_message "üß† –£—Ä–æ–≤–µ–Ω—å –∞–≤—Ç–æ–Ω–æ–º–Ω–æ—Å—Ç–∏: $autonomy_level, –í–∏–∑—É–∞–ª—å–Ω—ã–µ –∞–Ω–∞–ª–∏–∑—ã: $visual_analyses"
    
    if [[ "$autonomy_level" -lt 2 ]]; then
        log_message "‚ö†Ô∏è –ù–∏–∑–∫–∏–π —É—Ä–æ–≤–µ–Ω—å –∞–≤—Ç–æ–Ω–æ–º–Ω–æ—Å—Ç–∏"
    fi
}

# –ó–∞–ø—É—Å–∫ –æ—Å–Ω–æ–≤–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–∏
main "$@"
