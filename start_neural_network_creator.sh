#!/bin/bash

# –°–∫—Ä–∏–ø—Ç –∑–∞–ø—É—Å–∫–∞ —Å–∏—Å—Ç–µ–º—ã Neural Network Creator
# "–ù–µ–π—Ä–æ—Å–µ—Ç—å, –∫–æ—Ç–æ—Ä–∞—è —Å–æ–∑–¥–∞–µ—Ç –Ω–µ–π—Ä–æ—Å–µ—Ç–∏"

echo "üß† –ó–∞–ø—É—Å–∫ —Å–∏—Å—Ç–µ–º—ã Neural Network Creator..."
echo "================================================"

# –ü—Ä–æ–≤–µ—Ä—è–µ–º Python
if ! command -v python3 &> /dev/null; then
    echo "‚ùå Python3 –Ω–µ –Ω–∞–π–¥–µ–Ω. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Python3."
    exit 1
fi

# –ü—Ä–æ–≤–µ—Ä—è–µ–º pip
if ! command -v pip3 &> /dev/null; then
    echo "‚ùå pip3 –Ω–µ –Ω–∞–π–¥–µ–Ω. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ pip3."
    exit 1
fi

# –°–æ–∑–¥–∞–µ–º –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ –µ—Å–ª–∏ –µ–≥–æ –Ω–µ—Ç
if [ ! -d "neural_network_env" ]; then
    echo "üì¶ –°–æ–∑–¥–∞–Ω–∏–µ –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–≥–æ –æ–∫—Ä—É–∂–µ–Ω–∏—è..."
    python3 -m venv neural_network_env
fi

# –ê–∫—Ç–∏–≤–∏—Ä—É–µ–º –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ
echo "üîß –ê–∫—Ç–∏–≤–∞—Ü–∏—è –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–≥–æ –æ–∫—Ä—É–∂–µ–Ω–∏—è..."
source neural_network_env/bin/activate

# –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
echo "üìö –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π..."
pip install --upgrade pip
pip install torch torchvision torchaudio
pip install numpy matplotlib seaborn
pip install aiohttp aiohttp-cors
pip install fastapi uvicorn
pip install pydantic
pip install docker
pip install pyyaml
pip install requests

# –ü—Ä–æ–≤–µ—Ä—è–µ–º Ollama
if ! command -v ollama &> /dev/null; then
    echo "‚ö†Ô∏è Ollama –Ω–µ –Ω–∞–π–¥–µ–Ω. –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º..."
    curl -fsSL https://ollama.ai/install.sh | sh
    echo "üîÑ –ó–∞–ø—É—Å–∫ Ollama..."
    ollama serve &
    sleep 5
    echo "üì• –ó–∞–≥—Ä—É–∑–∫–∞ –º–æ–¥–µ–ª–∏ neural-chat..."
    ollama pull neural-chat:latest
fi

# –°–æ–∑–¥–∞–µ–º –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
echo "üìÅ –°–æ–∑–¥–∞–Ω–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π..."
mkdir -p /workspace/neural_networks/{models,data,visualizations,deployments,logs,architectures,autonomous_training,optimization_results,performance_logs,auto_models,architecture_templates,search_results,performance_db,system_logs,projects,statistics,backups}

# –ü—Ä–æ–≤–µ—Ä—è–µ–º Docker (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
if command -v docker &> /dev/null; then
    echo "üê≥ Docker –Ω–∞–π–¥–µ–Ω. –°–∏—Å—Ç–µ–º–∞ —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—è –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–Ω–∞."
else
    echo "‚ö†Ô∏è Docker –Ω–µ –Ω–∞–π–¥–µ–Ω. –†–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ –±—É–¥–µ—Ç –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–æ."
fi

# –ó–∞–ø—É—Å–∫–∞–µ–º —Å–∏—Å—Ç–µ–º—É
echo "üöÄ –ó–∞–ø—É—Å–∫ —Å–∏—Å—Ç–µ–º—ã Neural Network Creator..."
echo "================================================"
echo "üåê –í–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–µ–Ω –ø–æ –∞–¥—Ä–µ—Å—É: http://localhost:8081"
echo "ü§ñ –°–∏—Å—Ç–µ–º–∞ –±—É–¥–µ—Ç —Ä–∞–±–æ—Ç–∞—Ç—å –≤ –∞–≤—Ç–æ–Ω–æ–º–Ω–æ–º —Ä–µ–∂–∏–º–µ"
echo "üìä –í—Å–µ —Å–æ–∑–¥–∞–Ω–Ω—ã–µ –Ω–µ–π—Ä–æ—Å–µ—Ç–∏ –±—É–¥—É—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –æ–±—É—á–∞—Ç—å—Å—è –∏ —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞—Ç—å—Å—è"
echo "================================================"

# –ó–∞–ø—É—Å–∫–∞–µ–º –≥–ª–∞–≤–Ω—ã–π —Ñ–∞–π–ª
python3 neural_network_creator_main.py

echo "üõë –°–∏—Å—Ç–µ–º–∞ Neural Network Creator –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞."