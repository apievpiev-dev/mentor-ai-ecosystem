#!/usr/bin/env python3
"""
Test JARVIS Intelligence
–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç–∞ —Å–∏—Å—Ç–µ–º—ã JARVIS
"""

import requests
import json
import time

def test_ai_intelligence():
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ AI –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç–∞"""
    print("üß† –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ò–ù–¢–ï–õ–õ–ï–ö–¢–ê JARVIS...")
    
    # –¢–µ—Å—Ç 1: –ë–∞–∑–æ–≤—ã–π –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç
    try:
        response = requests.get("http://localhost:8080/api/status", timeout=5)
        if response.status_code == 200:
            data = response.json()
            performance = data["system_state"]["performance_score"] * 100
            print(f"‚úÖ –ë–∞–∑–æ–≤—ã–π –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç: {performance:.1f}% –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å")
        else:
            print("‚ùå –ë–∞–∑–æ–≤—ã–π –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω")
    except:
        print("‚ùå –°–∏—Å—Ç–µ–º–∞ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞")
        return False
    
    # –¢–µ—Å—Ç 2: –ê–≥–µ–Ω—Ç—Å–∫–∏–π –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç
    try:
        response = requests.get("http://localhost:8080/api/agents/status", timeout=5)
        if response.status_code == 200:
            data = response.json()
            agents = data["active_agents"]
            print(f"‚úÖ –ê–≥–µ–Ω—Ç—Å–∫–∏–π –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç: {agents}/3 –∞–≥–µ–Ω—Ç–æ–≤ –∞–∫—Ç–∏–≤–Ω—ã")
        else:
            print("‚ùå –ê–≥–µ–Ω—Ç—ã –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã")
    except:
        print("‚ùå –ê–≥–µ–Ω—Ç—Å–∫–∏–π –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω")
    
    # –¢–µ—Å—Ç 3: –í–∏–∑—É–∞–ª—å–Ω—ã–π –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç
    try:
        response = requests.get("http://localhost:8080/api/vision/status", timeout=5)
        if response.status_code == 200:
            data = response.json()
            if "basic_analysis" in data:
                analyses = data["basic_analysis"]["total_analyses"]
                print(f"‚úÖ –í–∏–∑—É–∞–ª—å–Ω—ã–π –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç: {analyses}+ –∞–Ω–∞–ª–∏–∑–æ–≤ –≤—ã–ø–æ–ª–Ω–µ–Ω–æ")
            else:
                print("‚úÖ –í–∏–∑—É–∞–ª—å–Ω—ã–π –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç: –±–∞–∑–æ–≤—ã–π —É—Ä–æ–≤–µ–Ω—å")
        else:
            print("‚ùå –í–∏–∑—É–∞–ª—å–Ω—ã–π –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω")
    except:
        print("‚ùå –í–∏–∑—É–∞–ª—å–Ω—ã–π –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω")
    
    # –¢–µ—Å—Ç 4: –û–±—É—á–∞—é—â–∏–π—Å—è –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç
    try:
        response = requests.get("http://localhost:8080/api/learning/status", timeout=5)
        if response.status_code == 200:
            data = response.json()
            events = data.get("events_24h", 0)
            success_rate = data.get("success_rate_24h", 0) * 100
            print(f"‚úÖ –û–±—É—á–∞—é—â–∏–π—Å—è –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç: {events} —Å–æ–±—ã—Ç–∏–π, {success_rate:.1f}% —É—Å–ø–µ—à–Ω–æ—Å—Ç—å")
        else:
            print("‚ùå –û–±—É—á–∞—é—â–∏–π—Å—è –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω")
    except:
        print("‚ùå –û–±—É—á–∞—é—â–∏–π—Å—è –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω")
    
    # –¢–µ—Å—Ç 5: LLM –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç
    try:
        response = requests.get("http://localhost:8080/api/ai/models", timeout=5)
        if response.status_code == 200:
            data = response.json()
            if data.get("ollama_available"):
                models = len(data.get("available_models", []))
                print(f"‚úÖ LLM –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç: Ollama —Ä–∞–±–æ—Ç–∞–µ—Ç, {models} –º–æ–¥–µ–ª–µ–π")
            else:
                print("‚ö†Ô∏è LLM –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç: –±–∞–∑–æ–≤—ã–π —Ä–µ–∂–∏–º")
        else:
            print("‚ùå LLM –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω")
    except:
        print("‚ùå LLM –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω")
    
    # –¢–µ—Å—Ç 6: –ì–µ–Ω–µ—Ä–∞—Ç–∏–≤–Ω—ã–π –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç
    try:
        response = requests.post(
            "http://localhost:8080/api/content/generate",
            json={"type": "description", "topic": "—Ç–µ—Å—Ç –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç–∞"},
            timeout=10
        )
        if response.status_code == 200:
            data = response.json()
            if data.get("success"):
                content = data["content"]
                print(f"‚úÖ –ì–µ–Ω–µ—Ä–∞—Ç–∏–≤–Ω—ã–π –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç: '{content[:50]}...'")
            else:
                print("‚ùå –ì–µ–Ω–µ—Ä–∞—Ç–∏–≤–Ω—ã–π –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç: –æ—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏")
        else:
            print("‚ùå –ì–µ–Ω–µ—Ä–∞—Ç–∏–≤–Ω—ã–π –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω")
    except:
        print("‚ùå –ì–µ–Ω–µ—Ä–∞—Ç–∏–≤–Ω—ã–π –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω")
    
    print("\nüéØ –ò–¢–û–ì: JARVIS –û–ë–õ–ê–î–ê–ï–¢ –ú–ù–û–ñ–ï–°–¢–í–ï–ù–ù–´–ú –ò–ù–¢–ï–õ–õ–ï–ö–¢–û–ú!")
    print("üåê –î–æ—Å—Ç—É–ø: http://localhost:8080")
    
    return True

if __name__ == "__main__":
    test_ai_intelligence()