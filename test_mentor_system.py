#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è —Å–∏—Å—Ç–µ–º—ã MENTOR
"""

import urllib.request
import urllib.parse
import json
import time

def test_mentor_system():
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã MENTOR"""
    
    print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã MENTOR...")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å —Å–∏—Å—Ç–µ–º—ã
    try:
        with urllib.request.urlopen("http://localhost:8081/api/status", timeout=5) as response:
            if response.status == 200:
                data = response.read().decode('utf-8')
                status = json.loads(data)
                print(f"‚úÖ –°–∏—Å—Ç–µ–º–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç: {status['system_name']}")
                print(f"üìä –°—Ç–∞—Ç—É—Å: {status['status']}")
                print(f"ü§ñ –ê–≥–µ–Ω—Ç–æ–≤: {status['agents']}")
            else:
                print(f"‚ùå –û—à–∏–±–∫–∞ —Å—Ç–∞—Ç—É—Å–∞: {response.status}")
                return
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è: {e}")
        return
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º —Ä–∞–∑–Ω—ã—Ö –∞–≥–µ–Ω—Ç–æ–≤
    test_messages = [
        {"message": "–ü—Ä–∏–≤–µ—Ç! –ö–∞–∫ –¥–µ–ª–∞?", "agent_type": "general_assistant"},
        {"message": "–°–æ–∑–¥–∞–π –∫–æ–¥ –¥–ª—è –≤–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è", "agent_type": "code_developer"},
        {"message": "–ü—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä—É–π –¥–∞–Ω–Ω—ã–µ –ø—Ä–æ–¥–∞–∂", "agent_type": "data_analyst"},
        {"message": "–°–æ–∑–¥–∞–π –ø–ª–∞–Ω –ø—Ä–æ–µ–∫—Ç–∞", "agent_type": "project_manager"},
        {"message": "–°–æ–∑–¥–∞–π –¥–∏–∑–∞–π–Ω –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞", "agent_type": "designer"},
        {"message": "–ü—Ä–æ—Ç–µ—Å—Ç–∏—Ä—É–π —Å–∏—Å—Ç–µ–º—É", "agent_type": "qa_tester"}
    ]
    
    print(f"\nü§ñ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∞–≥–µ–Ω—Ç–æ–≤:")
    
    for i, test_data in enumerate(test_messages, 1):
        try:
            # –°–æ–∑–¥–∞–µ–º POST –∑–∞–ø—Ä–æ—Å
            data = json.dumps(test_data).encode('utf-8')
            req = urllib.request.Request(
                "http://localhost:8081/api/chat",
                data=data,
                headers={'Content-Type': 'application/json'}
            )
            
            with urllib.request.urlopen(req, timeout=10) as response:
                if response.status == 200:
                    response_data = response.read().decode('utf-8')
                    result = json.loads(response_data)
                    
                    if result.get('success'):
                        agent_response = result['response']['response']
                        agent_name = result['response']['agent']
                        print(f"  {i}. {agent_name}: {agent_response[:50]}...")
                    else:
                        print(f"  {i}. –û—à–∏–±–∫–∞: {result.get('error', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞')}")
                else:
                    print(f"  {i}. HTTP –æ—à–∏–±–∫–∞: {response.status}")
                    
        except Exception as e:
            print(f"  {i}. –û—à–∏–±–∫–∞: {e}")
        
        time.sleep(0.5)  # –ù–µ–±–æ–ª—å—à–∞—è –ø–∞—É–∑–∞ –º–µ–∂–¥—É –∑–∞–ø—Ä–æ—Å–∞–º–∏
    
    print(f"\nüåê –í–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –¥–æ—Å—Ç—É–ø–µ–Ω –Ω–∞: http://localhost:8081")
    print(f"üìù –û—Ç–∫—Ä–æ–π—Ç–µ –±—Ä–∞—É–∑–µ—Ä –∏ –ø—Ä–æ—Ç–µ—Å—Ç–∏—Ä—É–π—Ç–µ —Å–∏—Å—Ç–µ–º—É –≤—Ä—É—á–Ω—É—é!")
    print(f"\nüí° –°–∏—Å—Ç–µ–º–∞ MENTOR —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ!")

if __name__ == "__main__":
    test_mentor_system()